// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Ranks top talents using an AI algorithm.
 *
 * - rankTopTalents - A function that handles the ranking of top talents.
 * - RankTopTalentsInput - The input type for the rankTopTalents function.
 * - RankTopTalentsOutput - The return type for the rankTopTalents function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const RankTopTalentsInputSchema = z.object({
  talentProfiles: z.array(
    z.object({
      name: z.string().describe('The name of the talent.'),
      skills: z.array(z.string()).describe('The skills of the talent.'),
      experience: z.string().describe('The experience of the talent.'),
      socialMediaPlatform: z.string().describe('The social media platform of the talent.'),
    })
  ).describe('An array of talent profiles to rank.'),
  rankingCriteria: z.string().describe('The criteria to use for ranking the talents.'),
});
export type RankTopTalentsInput = z.infer<typeof RankTopTalentsInputSchema>;

const RankTopTalentsOutputSchema = z.array(
  z.object({
    name: z.string().describe('The name of the talent.'),
    rank: z.number().describe('The rank of the talent based on the ranking criteria.'),
    reason: z.string().describe('The reason for the talent being ranked this way.')
  })
).describe('An array of ranked talent profiles.');
export type RankTopTalentsOutput = z.infer<typeof RankTopTalentsOutputSchema>;

export async function rankTopTalents(input: RankTopTalentsInput): Promise<RankTopTalentsOutput> {
  return rankTopTalentsFlow(input);
}

const rankTopTalentsPrompt = ai.definePrompt({
  name: 'rankTopTalentsPrompt',
  input: {schema: RankTopTalentsInputSchema},
  output: {schema: RankTopTalentsOutputSchema},
  prompt: `You are an AI expert at ranking social media talent. Given the following talent profiles, rank them based on the following criteria: {{{rankingCriteria}}}.\n\nTalent Profiles:\n{{#each talentProfiles}}\n- Name: {{{name}}}\n  Skills: {{#each skills}}{{{this}}}, {{/each}}\n  Experience: {{{experience}}}\n  Platform: {{{socialMediaPlatform}}}\n{{/each}}\n\nEnsure that the output is a JSON array of talent objects, each with a name, rank (as a number), and a short reason for the ranking.\n`,
});

const rankTopTalentsFlow = ai.defineFlow(
  {
    name: 'rankTopTalentsFlow',
    inputSchema: RankTopTalentsInputSchema,
    outputSchema: RankTopTalentsOutputSchema,
  },
  async input => {
    const {output} = await rankTopTalentsPrompt(input);
    return output!;
  }
);
